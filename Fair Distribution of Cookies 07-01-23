class Solution:
    def distributeCookies(self, cookies: List[int], k: int) -> int:
        dist = [0 for i in range(k)] 
        n = len(cookies)

        def backtrack(i, zero_count):
            if n - i < zero_count:
                return float('inf')
            if i == n:
                return max(dist)
            
            # Logic
            answer = float('inf')
            for j in range(k):
                zero_count -= int(dist[j] == 0)
                dist[j] += cookies[i]

                # recursion
                answer = min(answer, backtrack(i+1, zero_count))

                # Backtrack
                dist[j] -= cookies[i]
                zero_count += int(dist[j] == 0)
            
            return answer
        return backtrack(0, k)

